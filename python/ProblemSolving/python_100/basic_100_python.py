# -----------------------------------------------------------------------------------------
# 6001 ~ 6008, 출력 연습
# 분석: 단순 출력, 따옴표 출력 방법, 특수문자 출력, 슬래시 표현
# -----------------------------------------------------------------------------------------
print("Hello")
print("Hello World")
print("Hello")
print("World")
print("'Hello'")
print('"Hello World"')
print("\"!@#$%^&*()\'")
print("\"C:\\Download\\\'hello\'.py\"")
print("print(\"Hello\\nWorld\")")

# -----------------------------------------------------------------------------------------
# 6009 ~ 6017, 입력받고 (변환 후) 출력 연습
# 분석: 입력 받기, 정수/실수 변환, 여러 인자 입력받기 (input().split())
# 분석2: print 문 사용법
# -----------------------------------------------------------------------------------------
value=input()
print(value)

value=input()
value=int(value)
print(value)

f=input()
f=float(f)
print(f)

a=input()
b=input()
a=int(a)
b=int(b)
print(a)
print(b)

a=input()
b=input()
print(b)
print(a)

f=input()
f=float(f)
print(f)
print(f)
print(f)

a,b=input().split()
a=int(a)
b=int(b)
print(a)
print(b)

a,b=input().split()
print(b,a)

s=input()
print(s,s,s)

# -----------------------------------------------------------------------------------------
# 6018 ~ 6019, 출력 연습 (Separator)
# 분석: Separator, print 내 sep 사용, 스트링 안에 값 표현
# -----------------------------------------------------------------------------------------
a,b=input().split(":")
print(a,b,sep=":")

y, m, d = input().split('.')
print(f"{d}-{m}-{y}")

# -----------------------------------------------------------------------------------------
# 6020 ~ 6021, 문자열 내 일부 문자 변환
# 분석: replace 사용법, 문자열 배열 방식 처리
# -----------------------------------------------------------------------------------------
id_number = input()
print(id_number.replace('-', ''))

s = input()
print(s[0])
print(s[1])
print(s[2])
print(s[3])
print(s[4])

# -----------------------------------------------------------------------------------------
# 6022, 입력 데이터 쪼개기
# 분석: slicing 처리 (:), 슬라이싱 시 범위 개념 (0:2) -> 0, 1 index
# -----------------------------------------------------------------------------------------
s = input()
print(s[0:2])
print(s[2:4])
print(s[4:6])

# -----------------------------------------------------------------------------------------
# 6023, 시분초 입력받아 분만 출력하기
# 분석: 문자열 split 후 배열처럼 사용 방법
# -----------------------------------------------------------------------------------------
time = input()  # 시:분:초 형식으로 입력받기
print(time.split(':')[1])

# -----------------------------------------------------------------------------------------
# 6024, 단어 2개 입력받아 이어 붙이기
# 분석: 문자열 연결 방법, input().split() 시 구분 방식(공백)
# -----------------------------------------------------------------------------------------
w1, w2 = input().split()
result = w1 + w2 
print(result)

# -----------------------------------------------------------------------------------------
# 6025, 정수 2개 입력받아 합 계산하기
# 분석: 정수 변환, 정수 합 표현
# -----------------------------------------------------------------------------------------
a, b = input().split()
c = int(a) + int(b)
print(c)

# -----------------------------------------------------------------------------------------
# 6026, 실수 2개 입력받아 합 계산하기
# 분석: input() 따로 작성 시 동작 방식 파악, 실수 변환, 실수 합 표현
# -----------------------------------------------------------------------------------------
a = float(input())
b = float(input())
print(a + b)

# -----------------------------------------------------------------------------------------
# 6027 ~ 6031, 10/8/16진 데이터 표현
# 분석: 출력 방법 숙지 (print('%x' % value)), 대/소문자 표현법
# 분석2: 유니코드 변환방법(ord), 유니코드 > 문자 변환(chr)
# -----------------------------------------------------------------------------------------
a = input()
n = int(a)
print('%x'% n)
print('%o'% n)

a = input()
n = int(a)
print('%X'% n)

a = input()
n = int(a, 16)
print('%o' % n)

n = ord(input())
print(n)

c = int(input())
print(chr(c))

# -----------------------------------------------------------------------------------------
# 6032, 입력된 정수의 부호를 바꾸어 출력, 정수 1개 입력받아 부호 바꾸기
# 분석: - 부호 사용
# -----------------------------------------------------------------------------------------
a = input()
a = int(a)
print(-a)

# -----------------------------------------------------------------------------------------
# 6033, 입력된 정수의 부호를 바꾸어 출력, 정수 1개 입력받아 부호 바꾸기
# 분석: chr (유니코드 > 문자 변환) / ord (문자 > 유니코드 변환)
# -----------------------------------------------------------------------------------------
char = input()
print(chr(ord(char) + 1))

# -----------------------------------------------------------------------------------------
# 6034, 정수 2개 입력받아 차 계산하기
# 분석: 일반적인 뺄셈
# -----------------------------------------------------------------------------------------
a,b = input().split()
a = int(a)
b = int(b)
print(a-b)

# -----------------------------------------------------------------------------------------
# 참고) 문자열 거꾸로 출력하기
# 분석: [::-1] 슬라이싱 기법 사용, 문자열[start:end:step] 기본 구조 확인
# 분석2: ::-1 -> start, end 생략 -> 처음부터 끝까지의 의미, -1은 역순 의미
# -----------------------------------------------------------------------------------------
string = 'Welcome SJKOding!'
print(string[::-1])

# -----------------------------------------------------------------------------------------
# 참고) 중복 제거하기
# 분석: 중복 없는 Set에 대한 이해
# 분석2: 리스트를 집합 자료형으로 변환, Set은 중복을 자동으로 제거하는 특징
# 분석3: set(temp) -> {1,2,3,4,5}
# 분석4: list(set(temp)) -> [1,2,3,4,5
# 분석5: set은 요소의 순서 보장하지 않으므로 결과 리스트의 순서는 달라질 수 있음
# 참고 정보) 순서보장 희망 시 > list(dict.fromkeys(temp))
# -----------------------------------------------------------------------------------------
temp = [1, 1, 2, 2, 3, 4, 4, 5]
print(list(set(temp)))

# -----------------------------------------------------------------------------------------
# 참고) list(dict.fromkeys(temp)) 의 동작원리
# 분석: dict.fromkeys(iterable)은 주어진 반복 가능 객체의 요소들을
# 딕셔너리의 키로 사용하여 딕셔너리를 생성하는 함수
# 분석2: 딕셔너리는 중복 키 허용하지 않아서 자동으로 중복 제거되며 삽입 순서 유지됨
# 분석3: dict.fromkeys(temp) -> {1: None, 2: None, 3: None, 4: None, 5: None}
# 분석4: None은 기본 할당 값이며 중요하지 않음
# 분석5: dict.fromkeys(temp) -> {1,2,3,4,5}
# 분석6: list(dict.fromkeys(temp)) -> [1,2,3,4,5]
# -----------------------------------------------------------------------------------------

# -----------------------------------------------------------------------------------------
# 6035, 실수 2개 입력받아 곱 계산하기
# 분석: float(f1) 방식의 형변환
# -----------------------------------------------------------------------------------------
f1, f2 = input().split()
f1 = float(f1)
f2 = float(f2)
print(f1 * f2)

# -----------------------------------------------------------------------------------------
# 6036, 단어 여러 번 출력하기
# 분석: 문자 * 횟수 연산
# -----------------------------------------------------------------------------------------
w, n = input().split()
n = int(n)
result = w * n
print(result)

# -----------------------------------------------------------------------------------------
# 6037, 문장 여러번 출력하기
# 분석: 문자열 * 횟수 연산, 횟수 먼저 입력 후 줄바꿈 후 여러번 출력할 문장 입력 순
# -----------------------------------------------------------------------------------------
number = input()
myString = input()
print(myString * int(number))

# -----------------------------------------------------------------------------------------
# 6038, 정수 2개 입력받아 거듭제곱 계산하기
# 분석: 거듭제곱근 표현법
# -----------------------------------------------------------------------------------------
i1, i2 = input().split()
i1 = int(i1)
i2 = int(i2)
print(i1**i2)

# -----------------------------------------------------------------------------------------
# 6039, 실수 2개 입력받아 거듭제곱 계산하기
# 분석: 거듭제곱근 표현법
# -----------------------------------------------------------------------------------------
f1, f2 = input().split()
print(float(f1)**float(f2))

# -----------------------------------------------------------------------------------------
# 6040, 정수 2개 입력받아 나눈 몫 계산하기
# 분석: 몫 계산 표현법
# -----------------------------------------------------------------------------------------
i1, i2 = input().split()
print(int(i1)//int(i2))

# -----------------------------------------------------------------------------------------
# 6041, 정수 2개 입력받아 나눈 나머지 계산하기
# 분석: 나머지 계산 표현법
# -----------------------------------------------------------------------------------------
i1, i2 = input().split()
print(int(i1)%int(i2))

# -----------------------------------------------------------------------------------------
# 6042, 실수 1개 입력받아 소숫점이하 자리 변환하기
# 분석: 소숫점이하 자리 변환 방법 (.2f)
# -----------------------------------------------------------------------------------------
val = input()
val = float(val)
result = format(val, ".2f")
print(result)

# -----------------------------------------------------------------------------------------
# 6043, 실수 2개 입력받아 나눈 결과 계산하기
# 분석: ".3f" formatting, 나누기 표현
# -----------------------------------------------------------------------------------------
f1, f2 = input().split()    # f1, f2 = map(float, input().split())
f1 = float(f1)
f2 = float(f2)
result = f1 / f2
# format 함수를 사용하여 result 값을 소숫점 셋째 자리까지 반올림한 문자열로 변환
print("{:.3f}".format(result))  # print(format(result, ".3f"))

# -----------------------------------------------------------------------------------------
# 6044, 정수 2개 입력받아 자동 계산하기 (합,차,곱,몫,나머지,나눈 값)
# 분석: //, / 동작 차리
# 분석2: 파이썬에서 / 연산자는 실제 나눗셈(진짜 나눗셈) 을 수행하며, 결과가 항상 실수(float)로 반환
# 분석3: // 연산자는 바닥 나눗셈(플로어 디비전) 을 수행하는데, 이는 나눗셈 결과에서 소수점 이하를 버리고 
# 가장 작은 정수(또는 float의 경우 소수점 이하가 없는 값)를 반환
# 분석4:
# 7 / 3은 2.3333... (실수 값)을 반환
# 7 // 3은 2를 반환
# -7 / 3은 -2.3333... 반환
# -7 // 3은 -3을 반환 (-2.3333이 -2가 아니라, 바닥값인 -3에 해당)
# -----------------------------------------------------------------------------------------
v1, v2 = input().split()
v1 = int(v1)
v2 = int(v2)
print(v1 + v2)
print(v1 - v2)
print(v1 * v2)
print(v1 // v2)
print(v1 % v2)
print(format(v1 / v2, ".2f"))

# -----------------------------------------------------------------------------------------
# 6045, 정수 3개 입력받아 합과 평균 출력하기
# 분석: ".2f", / 사용법
# -----------------------------------------------------------------------------------------
i1, i2, i3 = input().split()
i1 = int(i1)
i2 = int(i2)
i3 = int(i3)
sum = i1 + i2 + i3
average = sum / 3
print(sum, format(average, ".2f"))

# -----------------------------------------------------------------------------------------
# 6046, [기초-비트시프트연산] 정수 1개 입력받아 2배 곱해 출력하기
# 분석: << 연산, >> 연산
# 추가 설명:
# 2진수 형태로 저장되어 있는 값들을 왼쪽(<<)이나 오른쪽(>>)으로
# 지정한 비트 수만큼 밀어주면 2배씩 늘어나거나 1/2로 줄어드는데,
# 왼쪽 비트시프트(<<)가 될 때에는 오른쪽에 0이 주어진 개수만큼 추가되고,
# 오른쪽 비트시프트(>>)가 될 때에는 왼쪽에 0(0 또는 양의 정수인 경우)이나 1(음의 정수인 경우)이 개수만큼 추가되고,
# 가장 오른쪽에 있는 1비트는 사라짐
# -----------------------------------------------------------------------------------------
v = input()
v = int(v)
print(v << 1)   # 2배 곱 (*2)

# -----------------------------------------------------------------------------------------
# 6047, [기초-비트시프트연산] 2의 거듭제곱 배로 곱해 출력하기
# 분석: "a << b", 시프트 연산 시 2의 거듭제곱 연산
# 분석2: 이진법 원리, 1, 2, 4, 8, 16, ... 2024 ...
# -----------------------------------------------------------------------------------------
v1, v2 = input().split()
v1 = int(v1)
v2 = int(v2)
shiftResult = v1 << v2
print(shiftResult)

# -----------------------------------------------------------------------------------------
# 6048, 정수 2개 입력받아 비교하기 (<, >)
# 분석: 비교 연산 결과 True / False
# -----------------------------------------------------------------------------------------
a, b = input().split()
a = int(a)
b = int(b)
result = a < b
print(result)

# -----------------------------------------------------------------------------------------
# 6049, 정수 2개 입력받아 비교하기 (==)
# -----------------------------------------------------------------------------------------
a, b = input().split()
a = int(a)
b = int(b)
print(a == b)

# -----------------------------------------------------------------------------------------
# 6050, 정수 2개 입력받아 비교하기 (<=, >=)
# -----------------------------------------------------------------------------------------
a, b = input().split()
a = int(a)
b = int(b)
print(a <= b)

# -----------------------------------------------------------------------------------------
# 6051, 정수 2개 입력받아 비교하기 (!=)
# -----------------------------------------------------------------------------------------
a, b = input().split()
a = int(a)
b = int(b)
print(a != b)

# -----------------------------------------------------------------------------------------
# 6052, 정수 입력받아 참 거짓 평가하기
# 분석: Python에서 0은 False, 나머지 정수값은 True
# -----------------------------------------------------------------------------------------
i = input()
i = int(i)
print(bool(i))

# -----------------------------------------------------------------------------------------
# 6053, 참 거짓 바꾸기
# 분석: not keyword
# -----------------------------------------------------------------------------------------
i = input()
i = int(i)
print(not bool(i))

# -----------------------------------------------------------------------------------------
# 6054, 둘 다 참일 경우만 참 출력하기
# 분석: and 연산자
# -----------------------------------------------------------------------------------------
i1, i2 = input().split()
i1 = int(i1)
i2 = int(i2)
result = bool(i1) and bool(i2)
print(result)

# -----------------------------------------------------------------------------------------
# 6055, 하나라도 참이면 참 출력하기
# 분석: or 연산자
# -----------------------------------------------------------------------------------------
i1, i2 = input().split()
i1 = int(i1)
i2 = int(i2)
print(bool(i1) or bool(i2))

# -----------------------------------------------------------------------------------------
# 6056, 참/거짓이 서로 다를 때에만 참 출력하기
# -----------------------------------------------------------------------------------------
i1, i2 = input().split()
i1 = int(i1)
i2 = int(i2)
b1 = bool(i1)
b2 = bool(i2)
result = b1 != b2
# print((b1 and (not b2)) or ((not b1) and b2))
print(result)

# -----------------------------------------------------------------------------------------
# 6057, 참/거짓이 서로 같을 때에만 참 출력하기 (True == True or False == False)
# -----------------------------------------------------------------------------------------
i1, i2 = input().split()
i1 = int(i1)
i2 = int(i2)
print(bool(i1) and bool(i2) or not bool(i1) and not bool(i2))

# -----------------------------------------------------------------------------------------
# 6058, 둘 다 거짓일 경우만 참 출력하기
# 분석: not A and not B -> not(A or B)
# -----------------------------------------------------------------------------------------
i1, i2 = input().split()
i1 = int(i1)
i2 = int(i2)
result = not bool(i1) and not bool(i2)
print(result)